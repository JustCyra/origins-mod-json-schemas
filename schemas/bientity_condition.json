{
	"$id": "https://snavesutit.github.io/origins-mod-schemas/",
	"title": "Bi-entity Condition",
	"description": "Bi-entity Condition Types operate on a Pair<Entity, Entity>, or in simpler terms: an actor and a target. The actor and target is determined depending on the used power type, and can be swapped. These are available to power/condition types that provides a bientity_condition object field.",
	"type": "object",
	"required": [
		"type"
	],
	"properties": {
		"type": {
			"description": "Bi-entity Condition Types operate on a Pair<Entity, Entity>, or in simpler terms: an actor and a target. The actor and target is determined depending on the used power type, and can be swapped. These are available to power/condition types that provides a bientity_condition object field.",
			"type": "string"
		},
		"inverted": {
			"description": "If true, the condition acts inverted.",
			"type": "boolean",
			"default": false
		}
	},
	"allOf": [
		{
			"if": {
				"properties": {
					"type": {
						"oneOf": [
							{
								"const": "apoli:actor_condition"
							},
							{
								"const": "origins:actor_condition"
							}
						]
					}
				}
			},
			"then": {
				"$ref": "./bientity_conditions/actor_condition.json"
			}
		},
		{
			"if": {
				"properties": {
					"type": {
						"oneOf": [
							{
								"const": "apoli:attacker"
							},
							{
								"const": "origins:attacker"
							}
						]
					}
				}
			},
			"then": {
				"$ref": "./bientity_conditions/attacker.json"
			}
		},
		{
			"if": {
				"properties": {
					"type": {
						"oneOf": [
							{
								"const": "apoli:attack_target"
							},
							{
								"const": "origins:attack_target"
							}
						]
					}
				}
			},
			"then": {
				"$ref": "./bientity_conditions/attack_target.json"
			}
		},
		{
			"if": {
				"properties": {
					"type": {
						"oneOf": [
							{
								"const": "apoli:both"
							},
							{
								"const": "origins:both"
							}
						]
					}
				}
			},
			"then": {
				"$ref": "./bientity_conditions/both.json"
			}
		},
		{
			"if": {
				"properties": {
					"type": {
						"oneOf": [
							{
								"const": "apoli:can_see"
							},
							{
								"const": "origins:can_see"
							}
						]
					}
				}
			},
			"then": {
				"$ref": "./bientity_conditions/can_see.json"
			}
		},
		{
			"if": {
				"properties": {
					"type": {
						"oneOf": [
							{
								"const": "apoli:distance"
							},
							{
								"const": "origins:distance"
							}
						]
					}
				}
			},
			"then": {
				"$ref": "./bientity_conditions/distance.json"
			}
		},
		{
			"if": {
				"properties": {
					"type": {
						"oneOf": [
							{
								"const": "apoli:dummy"
							},
							{
								"const": "origins:dummy"
							}
						]
					}
				}
			},
			"then": {
				"$ref": "./bientity_conditions/dummy.json"
			}
		},
		{
			"if": {
				"properties": {
					"type": {
						"oneOf": [
							{
								"const": "apoli:either"
							},
							{
								"const": "origins:either"
							}
						]
					}
				}
			},
			"then": {
				"$ref": "./bientity_conditions/either.json"
			}
		},
		{
			"if": {
				"properties": {
					"type": {
						"oneOf": [
							{
								"const": "apoli:invert"
							},
							{
								"const": "origins:invert"
							}
						]
					}
				}
			},
			"then": {
				"$ref": "./bientity_conditions/invert.json"
			}
		},
		{
			"if": {
				"properties": {
					"type": {
						"oneOf": [
							{
								"const": "apoli:owner"
							},
							{
								"const": "origins:owner"
							}
						]
					}
				}
			},
			"then": {
				"$ref": "./bientity_conditions/owner.json"
			}
		},
		{
			"if": {
				"properties": {
					"type": {
						"oneOf": [
							{
								"const": "apoli:relative_rotation"
							},
							{
								"const": "origins:relative_rotation"
							}
						]
					}
				}
			},
			"then": {
				"$ref": "./bientity_conditions/relative_rotation.json"
			}
		},
		{
			"if": {
				"properties": {
					"type": {
						"oneOf": [
							{
								"const": "apoli:riding"
							},
							{
								"const": "origins:riding"
							}
						]
					}
				}
			},
			"then": {
				"$ref": "./bientity_conditions/riding.json"
			}
		},
		{
			"if": {
				"properties": {
					"type": {
						"oneOf": [
							{
								"const": "apoli:riding_recursive"
							},
							{
								"const": "origins:riding_recursive"
							}
						]
					}
				}
			},
			"then": {
				"$ref": "./bientity_conditions/riding_recursive.json"
			}
		},
		{
			"if": {
				"properties": {
					"type": {
						"oneOf": [
							{
								"const": "apoli:riding_root"
							},
							{
								"const": "origins:riding_root"
							}
						]
					}
				}
			},
			"then": {
				"$ref": "./bientity_conditions/riding_root.json"
			}
		},
		{
			"if": {
				"properties": {
					"type": {
						"oneOf": [
							{
								"const": "apoli:target_condition"
							},
							{
								"const": "origins:target_condition"
							}
						]
					}
				}
			},
			"then": {
				"$ref": "./bientity_conditions/target_condition.json"
			}
		},
		{
			"if": {
				"properties": {
					"type": {
						"oneOf": [
							{
								"const": "apoli:undirected"
							},
							{
								"const": "origins:undirected"
							}
						]
					}
				}
			},
			"then": {
				"$ref": "./bientity_conditions/undirected.json"
			}
		},
		{
			"if": {
				"properties": {
					"type": {
						"oneOf": [
							{
								"const": "apoli:and"
							},
							{
								"const": "origins:and"
							}
						]
					}
				}
			},
			"then": {
				"$ref": "./bientity_conditions/and.json"
			}
		},
		{
			"if": {
				"properties": {
					"type": {
						"oneOf": [
							{
								"const": "apoli:constant"
							},
							{
								"const": "origins:constant"
							}
						]
					}
				}
			},
			"then": {
				"$ref": "./bientity_conditions/constant.json"
			}
		},
		{
			"if": {
				"properties": {
					"type": {
						"oneOf": [
							{
								"const": "apoli:or"
							},
							{
								"const": "origins:or"
							}
						]
					}
				}
			},
			"then": {
				"$ref": "./bientity_conditions/or.json"
			}
		}
	]
}